package com.wwh.loginwx.controller;

import java.io.IOException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.wwh.loginwx.req.LoginwxRequest;
import com.wwh.loginwx.service.impl.LoginwxService;
import com.wwh.loginwx.util.LoginwxUtil;
import com.wwh.loginwx.vo.WXUserInfoVO;
import com.wwh.loginwx.vo.WXUserTokenVO;
import com.wwh.loginwx.vo.WeChatQRCodeVO;

@Controller
@RequestMapping("/pages")
public class LoginwxControlller {
	private static Logger logger = LogManager.getLogger(LoginwxControlller.class);

	@Autowired
	LoginwxService loginwxService;

	// 请求授权微信授权回调后页面发送微信登陆
	@RequestMapping(value = "/con", method = RequestMethod.POST)
	public String reqInit(HttpServletRequest request, HttpServletResponse response) {
		logger.info("进入微信登陆授权接口，开始请求授权");
		try {
			// 获取授权链接
			String url = LoginwxRequest.getWXAuthorizeUrl(LoginwxUtil.redirectUrl, LoginwxUtil.scopeUserinfo);
			// 重定向，让用户授权
			response.sendRedirect(url);
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}

	// 请求授权微信授权回调后页面发送微信登陆
	@RequestMapping(value = "/loginwx", method = RequestMethod.POST)
	public String loginwx(HttpServletRequest request, HttpServletResponse response) {
		logger.info("用户已授权，开始获取用户信息");
		// 获取传递的参数
		String code = request.getParameter("code");
		String state = request.getParameter("state");
		WXUserTokenVO wxUserTokenVO = null;
		WXUserInfoVO wxUserInfoVO = null;
		if (null != code && !"".equals(code) && LoginwxUtil.state.equals(state)) {
			// 得到有效的授权码，获取授权凭证
			wxUserTokenVO = LoginwxRequest.getWXUserToken(code);
			if (null != wxUserTokenVO) {
				// 得到微信用户信息
				wxUserInfoVO = LoginwxRequest.getWXUserInfo(wxUserTokenVO.getAccessToken(), wxUserTokenVO.getOpenId());
			}
		}
		if (null != wxUserInfoVO) {
			// 得到了微信用户信息,存入微信用户表,则创建新用户.
			Long userId = loginwxService.insertWXUserInfo(wxUserInfoVO);
			// 创建用户
			loginwxService.registerMember(userId, wxUserInfoVO.getNickName());
		}
		return null;
	}

	// 请求授权微信授权回调后页面发送微信登陆
	@RequestMapping(value = "/son", method = RequestMethod.POST)
	public String reqInite(HttpServletRequest request, HttpServletResponse response) {
		logger.info("进入微信登陆授权接口，开始请求授权");
		try {
			// 获取授权链接
			String url = LoginwxRequest.getWXAuthorizeUrl(LoginwxUtil.codeRedirectUrl, LoginwxUtil.scopeUserinfo);
			// 重定向，让用户授权
			response.sendRedirect(url);
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}

	@RequestMapping(value = "getTwoBarCode", method = { RequestMethod.POST, RequestMethod.GET })
	public void getTwoBarCode(HttpServletRequest request, HttpServletResponse response) {
		logger.info("进入获取二维码事件");
		logger.info("用户已授权，开始获取用户信息");
		// 获取传递的参数
		String code = request.getParameter("code");
		String state = request.getParameter("state");
		WXUserTokenVO wxUserTokenVO = null;
		WXUserInfoVO wxUserInfoVO = null;
		if (null != code && !"".equals(code) && LoginwxUtil.state.equals(state)) {
			// 得到有效的授权码，获取授权凭证
			wxUserTokenVO = LoginwxRequest.getWXUserToken(code);
			if (null != wxUserTokenVO) {
				// 得到微信用户信息
				wxUserInfoVO = LoginwxRequest.getWXUserInfo(wxUserTokenVO.getAccessToken(), wxUserTokenVO.getOpenId());
			}
		}
		if (null != wxUserInfoVO) {
			// 通过unionid获取用户注册信息
			WXUserInfoVO wxUserInfo = loginwxService.getWXUserInfoByUnionId(wxUserInfoVO.getUnionid());
			// 如果返回不为空 则标识用户注册过
			if (null != wxUserInfo) {
				String jsnMsg = loginwxService.getParam(wxUserInfo);
				WeChatQRCodeVO wecarRecde = loginwxService.createTemporaryORCode(wxUserTokenVO.getAccessToken(),
						jsnMsg);
				logger.info("返回的ticket ={}", wecarRecde.getTicket());
				// 获取二维码
				boolean result = loginwxService.chageQr(wecarRecde.getTicket());
				logger.info("获取二维码结果result={}", result);
			}
		}
	}

}
